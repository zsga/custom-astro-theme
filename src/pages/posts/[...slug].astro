---
import { getCollection } from 'astro:content'
import PostLayout from '@/layouts/PostLayout.astro'
import type { GetStaticPaths } from 'astro'
import '@shikijs/twoslash/style-rich.css'
import PreWrapper from '@/components/PreWrapper.astro'
import Tag from '@/components/Tag.astro'
import { formatDate } from '@/utils/date'

export const prerender = true
export const getStaticPaths = (async () => {
  const blogEntries = await getCollection('posts')
  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }))
}) satisfies GetStaticPaths

const { entry } = Astro.props
const { Content, remarkPluginFrontmatter } = await entry.render()
---

<PostLayout post={entry}>
  <h1>{ entry.data.title }</h1>
  <div class="flex flex-row items-center dark:text-zinc-500 text-sm mb-8 font-grotesk">
    <>
      <div class="i-ri:calendar-line mr-1"></div>
      { formatDate(entry.data.createdAt, false) }
      { entry.data.updatedAt ? <span id="update-time" title={formatDate(entry.data.updatedAt, false)}>(已编辑)</span> : ""  }
    </>

    <>
      <div class="i-tabler:clock mr-1 ml-4"></div>
      { remarkPluginFrontmatter.minutesRead }
    </>

    <>
      <div class="i-tabler:category mr-1 ml-4"></div>
      { entry.data.category }
    </>

    <>
      <div class="i-tabler:click mr-1 ml-4"></div>
    </>
  </div>

  <div class="flex flex-row items-center flex-wrap m-auto mt-2 mb-6 text-sm gap-2 sm:gap-3">
      { entry.data.tags?.map((item) => (
        <Tag name={item} link={true} />
      ))}
  </div>

  <Content components={{pre: PreWrapper}} />
</PostLayout>

<style>
  #update-time {
    margin-left: 4px;
  }
</style>